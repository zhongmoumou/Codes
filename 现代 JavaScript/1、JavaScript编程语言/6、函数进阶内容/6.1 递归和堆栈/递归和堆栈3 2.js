/* 
任务三：斐波那契数

斐波那契数 序列有这样的公式： Fn = Fn-1 + Fn-2。换句话说，下一个数字是前两个数字的和。

前两个数字是 1，然后是 2(1+1)，然后 3(1+2)，5(2+3) 等：1, 1, 2, 3, 5, 8, 13, 21...。

斐波那契数与 黄金比例 以及我们周围的许多自然现象有关。

编写一个函数 fib(n) 返回第 n 个斐波那契数。

工作示例：

function fib(n) {
    // 你的代码
}

alert(fib(3)); // 2
alert(fib(7)); // 13
alert(fib(77)); // 5527939700884757
P.S. 函数运行速度要快，对 fib(77) 的调用不应该超过几分之一秒。 
*/

// 方法一：递归，不推荐用，因为n越大越消耗资源
function fib(n) { 
    return n <= 1 ? n : fib(n - 1) + fib(n - 2);
}

alert(fib(3)); // 2
alert(fib(7)); // 13
// alert(fib(77)); // 5527939700884757


// 方法二：循环，推荐用
function fib2(n) {
    let a = 1;
    let b = 1;
    for (let i = 3; i <= n; i++) {
      let c = a + b;
      a = b;
      b = c;
    }
    return b;
  }
  
  alert( fib2(3) ); // 2
  alert( fib2(7) ); // 13
  alert( fib2(77) ); // 5527939700884757